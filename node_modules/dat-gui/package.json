{
  "_args": [
    [
      {
        "raw": "dat-gui@^0.5.0",
        "scope": null,
        "escapedName": "dat-gui",
        "name": "dat-gui",
        "rawSpec": "^0.5.0",
        "spec": ">=0.5.0 <0.6.0",
        "type": "range"
      },
      "/Users/Rudraksha/Documents/UPenn Documents/Fall 2017 Class Docs/CIS 700 Procedural Graphics/Project3-LSystems"
    ]
  ],
  "_from": "dat-gui@>=0.5.0 <0.6.0",
  "_id": "dat-gui@0.5.0",
  "_inCache": true,
  "_location": "/dat-gui",
  "_npmUser": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dat-gui@^0.5.0",
    "scope": null,
    "escapedName": "dat-gui",
    "name": "dat-gui",
    "rawSpec": "^0.5.0",
    "spec": ">=0.5.0 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dat-gui/-/dat-gui-0.5.0.tgz",
  "_shasum": "1212da836109747d0ac220bad7b07c17daa03583",
  "_shrinkwrap": null,
  "_spec": "dat-gui@^0.5.0",
  "_where": "/Users/Rudraksha/Documents/UPenn Documents/Fall 2017 Class Docs/CIS 700 Procedural Graphics/Project3-LSystems",
  "author": {
    "name": "Data Arts Team, Google Creative Lab"
  },
  "dependencies": {},
  "description": "Browserified dat-gui library",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "1212da836109747d0ac220bad7b07c17daa03583",
    "tarball": "https://registry.npmjs.org/dat-gui/-/dat-gui-0.5.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://code.google.com/p/dat-gui/",
  "licenses": [
    {
      "type": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "maintainers": [
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    }
  ],
  "name": "dat-gui",
  "optionalDependencies": {},
  "readme": "=dat.GUI=\nA lightweight graphical user interface for changing variables in JavaScript. \n\nGet started with dat.GUI by reading the tutorial at [http://workshop.chromeexperiments.com/examples/gui].\n\n----\n\n==Packaged Builds==\nThe easiest way to use dat.GUI in your code is by using the built source at {{{build/dat.gui.min.js}}}. These built JavaScript files bundle all the necessary dependencies to run dat.GUI.\n\nIn your {{{head}}} tag, include the following code:\n{{{\n<script type=\"text/javascript\" src=\"dat.gui.min.js\"></script>\n}}}\n\n----\n\n==Using dat.GUI with require.js==\nInternally, dat.GUI uses [http://requirejs.org/ require.js] to handle dependency management. If you're making changes to the source and want to see the effects of your changes without building, use require js.\n\nIn your {{{head}}} tag, include the following code:\n{{{\n<script data-main=\"path/to/main\" src=\"path/to/requirejs/require.js\"></script>\n}}}\n\nThen, in {{{path/to/main.js}}}:\n{{{\nrequire([\n  'path/to/gui/module/GUI'\n], function(GUI) {\n\n  // No namespace necessary \n  var gui = new GUI();\n\n});\n}}}\n\n----\n\n==Directory Contents==\n * build: Concatenated source code.\n * src: Modular code in [http://requirejs.org/ require.js] format. Also includes css, [http://sass-lang.com/ scss], and html, some of which is included during build.\n * tests: [https://github.com/jquery/qunit QUnit] test suite.\n * utils: [http://nodejs.org/ node.js] utility scripts for compiling source.\n\n----\n\n==Building your own dat.GUI==\n\nIn the terminal, enter the following:\n\n{{{\n$ cd utils\n$ node build_gui.js\n}}}\n\nThis will create a namespaced, unminified build of dat.GUI at {{{build/dat.gui.js}}}\n\n_To export minified source using Closure Compiler, open {{{utils/build_gui.js}}} and set the {{{minify}}} parameter to {{{true}}}._\n\n----\n\n==Change log==\n\n===0.5===\n * Moved to requirejs for dependency management.\n * Changed global namespace from *DAT* to *dat* (lowercase).\n * Added support for color controllers. See [http://workshop.chromeexperiments.com/examples/gui/#4--Color-Controllers Color Controllers].\n * Added support for folders. See [http://workshop.chromeexperiments.com/examples/gui/#3--Folders Folders].\n * Added support for saving named presets.  See [http://workshop.chromeexperiments.com/examples/gui/examples/gui/#6--Presets Presets].\n * Removed `height` parameter from GUI constructor. Scrollbar automatically induced when window is too short.\n * `dat.GUI.autoPlace` parameter removed. Use `new dat.GUI( { autoPlace: false } )`. See [http://workshop.chromeexperiments.com/examples/gui/#9--Custom-Placement Custom Placement].\n * `gui.autoListen` and `gui.listenAll()` removed. See [http://workshop.chromeexperiments.com/examples/gui/#11--Updating-the-Display-Manually Updating The Display Manually].\n * `dat.GUI.load` removed. See [http://workshop.chromeexperiments.com/examples/gui/#5--Saving-Values Saving Values].\n * Made Controller code completely agnostic of GUI. Controllers can easily be created independent of a GUI panel.\n\n\n===0.4===\n\n * Migrated from GitHub to Google Code.\n\n----\n\n==Thanks==\nThe following libraries / open-source projects were used in the development of dat.GUI:\n * [http://requirejs.org/ require.js]\n * [http://sass-lang.com/ Sass]\n * [http://nodejs.org/ node.js]\n * [https://github.com/jquery/qunit QUnit] / [http://jquery.com/ jquery]",
  "readmeFilename": "readme.wiki",
  "repository": {
    "type": "git",
    "url": "https://code.google.com/p/dat-gui/"
  },
  "version": "0.5.0"
}
